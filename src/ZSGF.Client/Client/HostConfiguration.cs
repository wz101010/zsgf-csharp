/*
 * 用户全部 API 文档
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.Net.Http;
using Microsoft.Extensions.DependencyInjection;
using ZSGF.Client.Api;
using ZSGF.Client.Model;

namespace ZSGF.Client.Client
{
    /// <summary>
    /// Provides hosting configuration for ZSGF.Client
    /// </summary>
    public class HostConfiguration
    {
        private readonly IServiceCollection _services;
        private readonly JsonSerializerOptions _jsonOptions = new JsonSerializerOptions();

        internal bool HttpClientsAdded { get; private set; }

        /// <summary>
        /// Instantiates the class 
        /// </summary>
        /// <param name="services"></param>
        public HostConfiguration(IServiceCollection services)
        {
            _services = services;
            _jsonOptions.Converters.Add(new JsonStringEnumConverter());
            _jsonOptions.Converters.Add(new DateTimeJsonConverter());
            _jsonOptions.Converters.Add(new DateTimeNullableJsonConverter());
            _jsonOptions.Converters.Add(new AccessTokenListResultJsonConverter());
            _jsonOptions.Converters.Add(new AccessTokenListResultApiResponseJsonConverter());
            _jsonOptions.Converters.Add(new AccessTokenPostRequestJsonConverter());
            _jsonOptions.Converters.Add(new AccessTokenPutRequestJsonConverter());
            _jsonOptions.Converters.Add(new AlipayCreateOrderPagePayRequestJsonConverter());
            _jsonOptions.Converters.Add(new AlipayCreateOrderRequestJsonConverter());
            _jsonOptions.Converters.Add(new AlipayCreateOrderWapPayRequestJsonConverter());
            _jsonOptions.Converters.Add(new AlipayTradeQueryResponseJsonConverter());
            _jsonOptions.Converters.Add(new AlipayTradeQueryResponseApiResponseJsonConverter());
            _jsonOptions.Converters.Add(new AlipayTradeRefundResponseJsonConverter());
            _jsonOptions.Converters.Add(new AlipayTradeRefundResponseApiResponseJsonConverter());
            _jsonOptions.Converters.Add(new AppInfoItemJsonConverter());
            _jsonOptions.Converters.Add(new AppInfoResultJsonConverter());
            _jsonOptions.Converters.Add(new AppInfoResultApiResponseJsonConverter());
            _jsonOptions.Converters.Add(new AppPropertyJsonConverter());
            _jsonOptions.Converters.Add(new AppUserConsentModelJsonConverter());
            _jsonOptions.Converters.Add(new AppUserConsentModelListApiResponseJsonConverter());
            _jsonOptions.Converters.Add(new AppUserResetEmailRequestJsonConverter());
            _jsonOptions.Converters.Add(new AppUserResetPhoneRequestJsonConverter());
            _jsonOptions.Converters.Add(new AppUserResetPwdRequestJsonConverter());
            _jsonOptions.Converters.Add(new AuthorizeResultJsonConverter());
            _jsonOptions.Converters.Add(new AuthorizeResultApiResponseJsonConverter());
            _jsonOptions.Converters.Add(new BkAgentRespInfoJsonConverter());
            _jsonOptions.Converters.Add(new BooleanApiResponseJsonConverter());
            _jsonOptions.Converters.Add(new ChargeInfoJsonConverter());
            _jsonOptions.Converters.Add(new CommonFriendModelJsonConverter());
            _jsonOptions.Converters.Add(new ContributeDetailJsonConverter());
            _jsonOptions.Converters.Add(new CreateOrderRequestJsonConverter());
            _jsonOptions.Converters.Add(new CreateOrderResultJsonConverter());
            _jsonOptions.Converters.Add(new CreateOrderResultApiResponseJsonConverter());
            _jsonOptions.Converters.Add(new CurrencyConsumeRequestJsonConverter());
            _jsonOptions.Converters.Add(new CurrencyTransactionJsonConverter());
            _jsonOptions.Converters.Add(new DirectoryItemJsonConverter());
            _jsonOptions.Converters.Add(new EmailSignInRequestJsonConverter());
            _jsonOptions.Converters.Add(new EmailSignUpRequestJsonConverter());
            _jsonOptions.Converters.Add(new EnterprisePayInfoJsonConverter());
            _jsonOptions.Converters.Add(new ExchangeCurrencyRequestJsonConverter());
            _jsonOptions.Converters.Add(new ExternalAccountBindRequestJsonConverter());
            _jsonOptions.Converters.Add(new ExternalAccountPutRequestJsonConverter());
            _jsonOptions.Converters.Add(new ExternalAccountSignInRequestJsonConverter());
            _jsonOptions.Converters.Add(new FileItemJsonConverter());
            _jsonOptions.Converters.Add(new FileListResultJsonConverter());
            _jsonOptions.Converters.Add(new FileListResultApiResponseJsonConverter());
            _jsonOptions.Converters.Add(new FollowerModelJsonConverter());
            _jsonOptions.Converters.Add(new FollowerPutModelJsonConverter());
            _jsonOptions.Converters.Add(new FulfillmentDetailJsonConverter());
            _jsonOptions.Converters.Add(new GeoLocationJsonConverter());
            _jsonOptions.Converters.Add(new GeoLocationModelJsonConverter());
            _jsonOptions.Converters.Add(new GeoLocationModelApiResponseJsonConverter());
            _jsonOptions.Converters.Add(new GeoLocationResponseModelJsonConverter());
            _jsonOptions.Converters.Add(new GetUserProfileResultJsonConverter());
            _jsonOptions.Converters.Add(new GetUserProfileResultApiResponseJsonConverter());
            _jsonOptions.Converters.Add(new GoodsDetailJsonConverter());
            _jsonOptions.Converters.Add(new GrantRequestJsonConverter());
            _jsonOptions.Converters.Add(new GrantResultJsonConverter());
            _jsonOptions.Converters.Add(new GrantResultApiResponseJsonConverter());
            _jsonOptions.Converters.Add(new HbFqPayInfoJsonConverter());
            _jsonOptions.Converters.Add(new Int64ApiResponseJsonConverter());
            _jsonOptions.Converters.Add(new IntactChargeInfoJsonConverter());
            _jsonOptions.Converters.Add(new MySqlGeometryJsonConverter());
            _jsonOptions.Converters.Add(new ObjectApiResponseJsonConverter());
            _jsonOptions.Converters.Add(new ObjectListApiResponseJsonConverter());
            _jsonOptions.Converters.Add(new OrderJsonConverter());
            _jsonOptions.Converters.Add(new OrderApiResponseJsonConverter());
            _jsonOptions.Converters.Add(new OrderListResultJsonConverter());
            _jsonOptions.Converters.Add(new OrderListResultApiResponseJsonConverter());
            _jsonOptions.Converters.Add(new PaymentInfoWithIdJsonConverter());
            _jsonOptions.Converters.Add(new PhoneSignInRequestJsonConverter());
            _jsonOptions.Converters.Add(new PhoneSignUpRequestJsonConverter());
            _jsonOptions.Converters.Add(new PresetPayToolInfoJsonConverter());
            _jsonOptions.Converters.Add(new ProfileResultJsonConverter());
            _jsonOptions.Converters.Add(new ProfileResultApiResponseJsonConverter());
            _jsonOptions.Converters.Add(new QRCodePreSignInRequestJsonConverter());
            _jsonOptions.Converters.Add(new QRCodeScanRequestJsonConverter());
            _jsonOptions.Converters.Add(new QRCodeSignInRequestJsonConverter());
            _jsonOptions.Converters.Add(new QRCodeSignUpRequestJsonConverter());
            _jsonOptions.Converters.Add(new RechargePointRequestJsonConverter());
            _jsonOptions.Converters.Add(new RecommendFriendJsonConverter());
            _jsonOptions.Converters.Add(new RefundChargeInfoJsonConverter());
            _jsonOptions.Converters.Add(new RefundSubFeeJsonConverter());
            _jsonOptions.Converters.Add(new ReturnPageNotifyRequestJsonConverter());
            _jsonOptions.Converters.Add(new SendEmailCodeRequestJsonConverter());
            _jsonOptions.Converters.Add(new SendSMSCodeRequestJsonConverter());
            _jsonOptions.Converters.Add(new SetupCodeJsonConverter());
            _jsonOptions.Converters.Add(new SetupCodeApiResponseJsonConverter());
            _jsonOptions.Converters.Add(new SignInRequestJsonConverter());
            _jsonOptions.Converters.Add(new SignUpRequestJsonConverter());
            _jsonOptions.Converters.Add(new StorageListResultJsonConverter());
            _jsonOptions.Converters.Add(new StorageListResultApiResponseJsonConverter());
            _jsonOptions.Converters.Add(new StringApiResponseJsonConverter());
            _jsonOptions.Converters.Add(new SubFeeJsonConverter());
            _jsonOptions.Converters.Add(new TapPayInfoJsonConverter());
            _jsonOptions.Converters.Add(new TokenModelJsonConverter());
            _jsonOptions.Converters.Add(new TokenModelApiResponseJsonConverter());
            _jsonOptions.Converters.Add(new TradeFundBillJsonConverter());
            _jsonOptions.Converters.Add(new TradeSettleDetailJsonConverter());
            _jsonOptions.Converters.Add(new TradeSettleInfoJsonConverter());
            _jsonOptions.Converters.Add(new UnionIDSignInRequestJsonConverter());
            _jsonOptions.Converters.Add(new UnionIDSignUpRequestJsonConverter());
            _jsonOptions.Converters.Add(new UpdateProfileRequestJsonConverter());
            _jsonOptions.Converters.Add(new UserJsonConverter());
            _jsonOptions.Converters.Add(new UserAccessTokenJsonConverter());
            _jsonOptions.Converters.Add(new UserCommonInterestsResultJsonConverter());
            _jsonOptions.Converters.Add(new UserCommonInterestsResultApiResponseJsonConverter());
            _jsonOptions.Converters.Add(new UserCurrencyJsonConverter());
            _jsonOptions.Converters.Add(new UserCurrencyCurrencyTransResultJsonConverter());
            _jsonOptions.Converters.Add(new UserCurrencyCurrencyTransResultApiResponseJsonConverter());
            _jsonOptions.Converters.Add(new UserCurrencyListApiResponseJsonConverter());
            _jsonOptions.Converters.Add(new UserFollowersResultJsonConverter());
            _jsonOptions.Converters.Add(new UserFollowersResultApiResponseJsonConverter());
            _jsonOptions.Converters.Add(new UserFriendsNearByResultJsonConverter());
            _jsonOptions.Converters.Add(new UserFriendsNearByResultApiResponseJsonConverter());
            _jsonOptions.Converters.Add(new UserLocationPostResultJsonConverter());
            _jsonOptions.Converters.Add(new UserLocationPostResultApiResponseJsonConverter());
            _jsonOptions.Converters.Add(new UserLocationsResultJsonConverter());
            _jsonOptions.Converters.Add(new UserLocationsResultApiResponseJsonConverter());
            _jsonOptions.Converters.Add(new UserLoginsJsonConverter());
            _jsonOptions.Converters.Add(new UserLoginsListApiResponseJsonConverter());
            _jsonOptions.Converters.Add(new UserMutualFollowersResultJsonConverter());
            _jsonOptions.Converters.Add(new UserMutualFollowersResultApiResponseJsonConverter());
            _jsonOptions.Converters.Add(new UserMutualFollowingsResultJsonConverter());
            _jsonOptions.Converters.Add(new UserMutualFollowingsResultApiResponseJsonConverter());
            _jsonOptions.Converters.Add(new UserProfileResultJsonConverter());
            _jsonOptions.Converters.Add(new UserProfileResultApiResponseJsonConverter());
            _jsonOptions.Converters.Add(new UserQRCodeScanResultJsonConverter());
            _jsonOptions.Converters.Add(new UserQRCodeScanResultApiResponseJsonConverter());
            _jsonOptions.Converters.Add(new VoucherDetailJsonConverter());
            _jsonOptions.Converters.Add(new WechatJSConfigResultJsonConverter());
            _jsonOptions.Converters.Add(new WechatJSConfigResultApiResponseJsonConverter());
            JsonSerializerOptionsProvider jsonSerializerOptionsProvider = new JsonSerializerOptionsProvider(_jsonOptions);
            _services.AddSingleton(jsonSerializerOptionsProvider);
            _services.AddSingleton<IApiFactory, ApiFactory>();
            _services.AddSingleton<AccessTokenApiEvents>();
            _services.AddTransient<IAccessTokenApi, AccessTokenApi>();
            _services.AddSingleton<AlipayApiEvents>();
            _services.AddTransient<IAlipayApi, AlipayApi>();
            _services.AddSingleton<AppApiEvents>();
            _services.AddTransient<IAppApi, AppApi>();
            _services.AddSingleton<DingTalkApiEvents>();
            _services.AddTransient<IDingTalkApi, DingTalkApi>();
            _services.AddSingleton<ExternalAccountApiEvents>();
            _services.AddTransient<IExternalAccountApi, ExternalAccountApi>();
            _services.AddSingleton<FileApiEvents>();
            _services.AddTransient<IFileApi, FileApi>();
            _services.AddSingleton<OAuthApiEvents>();
            _services.AddTransient<IOAuthApi, OAuthApi>();
            _services.AddSingleton<OrderApiEvents>();
            _services.AddTransient<IOrderApi, OrderApi>();
            _services.AddSingleton<StorageApiEvents>();
            _services.AddTransient<IStorageApi, StorageApi>();
            _services.AddSingleton<UserApiEvents>();
            _services.AddTransient<IUserApi, UserApi>();
            _services.AddSingleton<UserCurrencyApiEvents>();
            _services.AddTransient<IUserCurrencyApi, UserCurrencyApi>();
            _services.AddSingleton<UserFriendsApiEvents>();
            _services.AddTransient<IUserFriendsApi, UserFriendsApi>();
            _services.AddSingleton<UserLocationApiEvents>();
            _services.AddTransient<IUserLocationApi, UserLocationApi>();
            _services.AddSingleton<WechatApiEvents>();
            _services.AddTransient<IWechatApi, WechatApi>();
        }

        /// <summary>
        /// Configures the HttpClients.
        /// </summary>
        /// <param name="client"></param>
        /// <param name="builder"></param>
        /// <returns></returns>
        public HostConfiguration AddApiHttpClients
        (
            Action<HttpClient> client = null, Action<IHttpClientBuilder> builder = null)
        {
            if (client == null)
                client = c => c.BaseAddress = new Uri(ClientUtils.BASE_ADDRESS);

            List<IHttpClientBuilder> builders = new List<IHttpClientBuilder>();

            builders.Add(_services.AddHttpClient<IAccessTokenApi, AccessTokenApi>(client));
            builders.Add(_services.AddHttpClient<IAlipayApi, AlipayApi>(client));
            builders.Add(_services.AddHttpClient<IAppApi, AppApi>(client));
            builders.Add(_services.AddHttpClient<IDingTalkApi, DingTalkApi>(client));
            builders.Add(_services.AddHttpClient<IExternalAccountApi, ExternalAccountApi>(client));
            builders.Add(_services.AddHttpClient<IFileApi, FileApi>(client));
            builders.Add(_services.AddHttpClient<IOAuthApi, OAuthApi>(client));
            builders.Add(_services.AddHttpClient<IOrderApi, OrderApi>(client));
            builders.Add(_services.AddHttpClient<IStorageApi, StorageApi>(client));
            builders.Add(_services.AddHttpClient<IUserApi, UserApi>(client));
            builders.Add(_services.AddHttpClient<IUserCurrencyApi, UserCurrencyApi>(client));
            builders.Add(_services.AddHttpClient<IUserFriendsApi, UserFriendsApi>(client));
            builders.Add(_services.AddHttpClient<IUserLocationApi, UserLocationApi>(client));
            builders.Add(_services.AddHttpClient<IWechatApi, WechatApi>(client));
            
            if (builder != null)
                foreach (IHttpClientBuilder instance in builders)
                    builder(instance);

            HttpClientsAdded = true;

            return this;
        }

        /// <summary>
        /// Configures the JsonSerializerSettings
        /// </summary>
        /// <param name="options"></param>
        /// <returns></returns>
        public HostConfiguration ConfigureJsonOptions(Action<JsonSerializerOptions> options)
        {
            options(_jsonOptions);

            return this;
        }

        /// <summary>
        /// Adds tokens to your IServiceCollection
        /// </summary>
        /// <typeparam name="TTokenBase"></typeparam>
        /// <param name="token"></param>
        /// <returns></returns>
        public HostConfiguration AddTokens<TTokenBase>(TTokenBase token) where TTokenBase : TokenBase
        {
            return AddTokens(new TTokenBase[]{ token });
        }

        /// <summary>
        /// Adds tokens to your IServiceCollection
        /// </summary>
        /// <typeparam name="TTokenBase"></typeparam>
        /// <param name="tokens"></param>
        /// <returns></returns>
        public HostConfiguration AddTokens<TTokenBase>(IEnumerable<TTokenBase> tokens) where TTokenBase : TokenBase
        {
            TokenContainer<TTokenBase> container = new TokenContainer<TTokenBase>(tokens);
            _services.AddSingleton(services => container);

            return this;
        }

        /// <summary>
        /// Adds a token provider to your IServiceCollection
        /// </summary>
        /// <typeparam name="TTokenProvider"></typeparam>
        /// <typeparam name="TTokenBase"></typeparam>
        /// <returns></returns>
        public HostConfiguration UseProvider<TTokenProvider, TTokenBase>() 
            where TTokenProvider : TokenProvider<TTokenBase>
            where TTokenBase : TokenBase
        {
            _services.AddSingleton<TTokenProvider>();
            _services.AddSingleton<TokenProvider<TTokenBase>>(services => services.GetRequiredService<TTokenProvider>());

            return this;
        }
    }
}
