// <auto-generated>
/*
 * 用户全部 API 文档
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;
using ZSGF.Client.Client;

namespace ZSGF.Client.Model
{
    /// <summary>
    /// AppUserResetEmailRequest
    /// </summary>
    public partial class AppUserResetEmailRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AppUserResetEmailRequest" /> class.
        /// </summary>
        /// <param name="code">邮箱验证码</param>
        /// <param name="email">邮箱</param>
        [JsonConstructor]
        public AppUserResetEmailRequest(string code, Option<string> email = default)
        {
            Code = code;
            EmailOption = email;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// 邮箱验证码
        /// </summary>
        /// <value>邮箱验证码</value>
        [JsonPropertyName("code")]
        public string Code { get; set; }

        /// <summary>
        /// Used to track the state of Email
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string> EmailOption { get; private set; }

        /// <summary>
        /// 邮箱
        /// </summary>
        /// <value>邮箱</value>
        [JsonPropertyName("email")]
        public string Email { get { return this.EmailOption; } set { this.EmailOption = new Option<string>(value); } }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AppUserResetEmailRequest {\n");
            sb.Append("  Code: ").Append(Code).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // Code (string) minLength
            if (this.Code != null && this.Code.Length < 1)
            {
                yield return new ValidationResult("Invalid value for Code, length must be greater than 1.", new [] { "Code" });
            }

            if (this.Code != null) {
                // Code (string) pattern
                Regex regexCode = new Regex(@"\d{4,8}$", RegexOptions.CultureInvariant);

                if (!regexCode.Match(this.Code).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Code, must match a pattern of " + regexCode, new [] { "Code" });
                }
            }

            yield break;
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="AppUserResetEmailRequest" />
    /// </summary>
    public class AppUserResetEmailRequestJsonConverter : JsonConverter<AppUserResetEmailRequest>
    {
        /// <summary>
        /// Deserializes json to <see cref="AppUserResetEmailRequest" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override AppUserResetEmailRequest Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            Option<string> code = default;
            Option<string> email = default;

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        case "code":
                            code = new Option<string>(utf8JsonReader.GetString());
                            break;
                        case "email":
                            email = new Option<string>(utf8JsonReader.GetString());
                            break;
                        default:
                            break;
                    }
                }
            }

            if (!code.IsSet)
                throw new ArgumentException("Property is required for class AppUserResetEmailRequest.", nameof(code));

            if (code.IsSet && code.Value == null)
                throw new ArgumentNullException(nameof(code), "Property is not nullable for class AppUserResetEmailRequest.");

            return new AppUserResetEmailRequest(code.Value, email);
        }

        /// <summary>
        /// Serializes a <see cref="AppUserResetEmailRequest" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="appUserResetEmailRequest"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, AppUserResetEmailRequest appUserResetEmailRequest, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            WriteProperties(writer, appUserResetEmailRequest, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="AppUserResetEmailRequest" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="appUserResetEmailRequest"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, AppUserResetEmailRequest appUserResetEmailRequest, JsonSerializerOptions jsonSerializerOptions)
        {
            if (appUserResetEmailRequest.Code == null)
                throw new ArgumentNullException(nameof(appUserResetEmailRequest.Code), "Property is required for class AppUserResetEmailRequest.");

            writer.WriteString("code", appUserResetEmailRequest.Code);

            if (appUserResetEmailRequest.EmailOption.IsSet)
                if (appUserResetEmailRequest.EmailOption.Value != null)
                    writer.WriteString("email", appUserResetEmailRequest.Email);
                else
                    writer.WriteNull("email");
        }
    }
}
