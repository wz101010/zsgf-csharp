// <auto-generated>
/*
 * 用户全部 API 文档
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;
using ZSGF.Client.Client;

namespace ZSGF.Client.Model
{
    /// <summary>
    /// AlipayCreateOrderWapPayRequest
    /// </summary>
    public partial class AlipayCreateOrderWapPayRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AlipayCreateOrderWapPayRequest" /> class.
        /// </summary>
        /// <param name="orderNo">自定义订单号</param>
        /// <param name="amount">订单金额。例如：0.01</param>
        /// <param name="subject">商品名称</param>
        /// <param name="returnUrl">支付完成后返回的URL地址</param>
        [JsonConstructor]
        public AlipayCreateOrderWapPayRequest(string orderNo, double amount, string subject, Option<string> returnUrl = default)
        {
            OrderNo = orderNo;
            Amount = amount;
            Subject = subject;
            ReturnUrlOption = returnUrl;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// 自定义订单号
        /// </summary>
        /// <value>自定义订单号</value>
        [JsonPropertyName("orderNo")]
        public string OrderNo { get; set; }

        /// <summary>
        /// 订单金额。例如：0.01
        /// </summary>
        /// <value>订单金额。例如：0.01</value>
        [JsonPropertyName("amount")]
        public double Amount { get; set; }

        /// <summary>
        /// 商品名称
        /// </summary>
        /// <value>商品名称</value>
        [JsonPropertyName("subject")]
        public string Subject { get; set; }

        /// <summary>
        /// Used to track the state of ReturnUrl
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string> ReturnUrlOption { get; private set; }

        /// <summary>
        /// 支付完成后返回的URL地址
        /// </summary>
        /// <value>支付完成后返回的URL地址</value>
        [JsonPropertyName("returnUrl")]
        public string ReturnUrl { get { return this.ReturnUrlOption; } set { this.ReturnUrlOption = new Option<string>(value); } }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AlipayCreateOrderWapPayRequest {\n");
            sb.Append("  OrderNo: ").Append(OrderNo).Append("\n");
            sb.Append("  Amount: ").Append(Amount).Append("\n");
            sb.Append("  Subject: ").Append(Subject).Append("\n");
            sb.Append("  ReturnUrl: ").Append(ReturnUrl).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // OrderNo (string) minLength
            if (this.OrderNo != null && this.OrderNo.Length < 1)
            {
                yield return new ValidationResult("Invalid value for OrderNo, length must be greater than 1.", new [] { "OrderNo" });
            }

            // Amount (double) minimum
            if (this.Amount < (double)0.01)
            {
                yield return new ValidationResult("Invalid value for Amount, must be a value greater than or equal to 0.01.", new [] { "Amount" });
            }

            // Subject (string) minLength
            if (this.Subject != null && this.Subject.Length < 1)
            {
                yield return new ValidationResult("Invalid value for Subject, length must be greater than 1.", new [] { "Subject" });
            }

            yield break;
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="AlipayCreateOrderWapPayRequest" />
    /// </summary>
    public class AlipayCreateOrderWapPayRequestJsonConverter : JsonConverter<AlipayCreateOrderWapPayRequest>
    {
        /// <summary>
        /// Deserializes json to <see cref="AlipayCreateOrderWapPayRequest" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override AlipayCreateOrderWapPayRequest Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            Option<string> orderNo = default;
            Option<double?> amount = default;
            Option<string> subject = default;
            Option<string> returnUrl = default;

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        case "orderNo":
                            orderNo = new Option<string>(utf8JsonReader.GetString());
                            break;
                        case "amount":
                            if (utf8JsonReader.TokenType != JsonTokenType.Null)
                                amount = new Option<double?>(utf8JsonReader.GetDouble());
                            break;
                        case "subject":
                            subject = new Option<string>(utf8JsonReader.GetString());
                            break;
                        case "returnUrl":
                            returnUrl = new Option<string>(utf8JsonReader.GetString());
                            break;
                        default:
                            break;
                    }
                }
            }

            if (!orderNo.IsSet)
                throw new ArgumentException("Property is required for class AlipayCreateOrderWapPayRequest.", nameof(orderNo));

            if (!amount.IsSet)
                throw new ArgumentException("Property is required for class AlipayCreateOrderWapPayRequest.", nameof(amount));

            if (!subject.IsSet)
                throw new ArgumentException("Property is required for class AlipayCreateOrderWapPayRequest.", nameof(subject));

            if (orderNo.IsSet && orderNo.Value == null)
                throw new ArgumentNullException(nameof(orderNo), "Property is not nullable for class AlipayCreateOrderWapPayRequest.");

            if (amount.IsSet && amount.Value == null)
                throw new ArgumentNullException(nameof(amount), "Property is not nullable for class AlipayCreateOrderWapPayRequest.");

            if (subject.IsSet && subject.Value == null)
                throw new ArgumentNullException(nameof(subject), "Property is not nullable for class AlipayCreateOrderWapPayRequest.");

            return new AlipayCreateOrderWapPayRequest(orderNo.Value, amount.Value.Value, subject.Value, returnUrl);
        }

        /// <summary>
        /// Serializes a <see cref="AlipayCreateOrderWapPayRequest" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="alipayCreateOrderWapPayRequest"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, AlipayCreateOrderWapPayRequest alipayCreateOrderWapPayRequest, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            WriteProperties(writer, alipayCreateOrderWapPayRequest, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="AlipayCreateOrderWapPayRequest" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="alipayCreateOrderWapPayRequest"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, AlipayCreateOrderWapPayRequest alipayCreateOrderWapPayRequest, JsonSerializerOptions jsonSerializerOptions)
        {
            if (alipayCreateOrderWapPayRequest.OrderNo == null)
                throw new ArgumentNullException(nameof(alipayCreateOrderWapPayRequest.OrderNo), "Property is required for class AlipayCreateOrderWapPayRequest.");

            if (alipayCreateOrderWapPayRequest.Subject == null)
                throw new ArgumentNullException(nameof(alipayCreateOrderWapPayRequest.Subject), "Property is required for class AlipayCreateOrderWapPayRequest.");

            writer.WriteString("orderNo", alipayCreateOrderWapPayRequest.OrderNo);

            writer.WriteNumber("amount", alipayCreateOrderWapPayRequest.Amount);

            writer.WriteString("subject", alipayCreateOrderWapPayRequest.Subject);

            if (alipayCreateOrderWapPayRequest.ReturnUrlOption.IsSet)
                if (alipayCreateOrderWapPayRequest.ReturnUrlOption.Value != null)
                    writer.WriteString("returnUrl", alipayCreateOrderWapPayRequest.ReturnUrl);
                else
                    writer.WriteNull("returnUrl");
        }
    }
}
