// <auto-generated>
/*
 * 用户全部 API 文档
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;
using ZSGF.Client.Client;

namespace ZSGF.Client.Model
{
    /// <summary>
    /// BkAgentRespInfo
    /// </summary>
    public partial class BkAgentRespInfo : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BkAgentRespInfo" /> class.
        /// </summary>
        /// <param name="bindclrissrId">bindclrissrId</param>
        /// <param name="bindpyeracctbkId">bindpyeracctbkId</param>
        /// <param name="bindtrxId">bindtrxId</param>
        /// <param name="bkpyeruserCode">bkpyeruserCode</param>
        /// <param name="estterLocation">estterLocation</param>
        [JsonConstructor]
        public BkAgentRespInfo(Option<string> bindclrissrId = default, Option<string> bindpyeracctbkId = default, Option<string> bindtrxId = default, Option<string> bkpyeruserCode = default, Option<string> estterLocation = default)
        {
            BindclrissrIdOption = bindclrissrId;
            BindpyeracctbkIdOption = bindpyeracctbkId;
            BindtrxIdOption = bindtrxId;
            BkpyeruserCodeOption = bkpyeruserCode;
            EstterLocationOption = estterLocation;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// Used to track the state of BindclrissrId
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string> BindclrissrIdOption { get; private set; }

        /// <summary>
        /// Gets or Sets BindclrissrId
        /// </summary>
        [JsonPropertyName("bindclrissrId")]
        public string BindclrissrId { get { return this.BindclrissrIdOption; } set { this.BindclrissrIdOption = new Option<string>(value); } }

        /// <summary>
        /// Used to track the state of BindpyeracctbkId
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string> BindpyeracctbkIdOption { get; private set; }

        /// <summary>
        /// Gets or Sets BindpyeracctbkId
        /// </summary>
        [JsonPropertyName("bindpyeracctbkId")]
        public string BindpyeracctbkId { get { return this.BindpyeracctbkIdOption; } set { this.BindpyeracctbkIdOption = new Option<string>(value); } }

        /// <summary>
        /// Used to track the state of BindtrxId
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string> BindtrxIdOption { get; private set; }

        /// <summary>
        /// Gets or Sets BindtrxId
        /// </summary>
        [JsonPropertyName("bindtrxId")]
        public string BindtrxId { get { return this.BindtrxIdOption; } set { this.BindtrxIdOption = new Option<string>(value); } }

        /// <summary>
        /// Used to track the state of BkpyeruserCode
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string> BkpyeruserCodeOption { get; private set; }

        /// <summary>
        /// Gets or Sets BkpyeruserCode
        /// </summary>
        [JsonPropertyName("bkpyeruserCode")]
        public string BkpyeruserCode { get { return this.BkpyeruserCodeOption; } set { this.BkpyeruserCodeOption = new Option<string>(value); } }

        /// <summary>
        /// Used to track the state of EstterLocation
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string> EstterLocationOption { get; private set; }

        /// <summary>
        /// Gets or Sets EstterLocation
        /// </summary>
        [JsonPropertyName("estterLocation")]
        public string EstterLocation { get { return this.EstterLocationOption; } set { this.EstterLocationOption = new Option<string>(value); } }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class BkAgentRespInfo {\n");
            sb.Append("  BindclrissrId: ").Append(BindclrissrId).Append("\n");
            sb.Append("  BindpyeracctbkId: ").Append(BindpyeracctbkId).Append("\n");
            sb.Append("  BindtrxId: ").Append(BindtrxId).Append("\n");
            sb.Append("  BkpyeruserCode: ").Append(BkpyeruserCode).Append("\n");
            sb.Append("  EstterLocation: ").Append(EstterLocation).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="BkAgentRespInfo" />
    /// </summary>
    public class BkAgentRespInfoJsonConverter : JsonConverter<BkAgentRespInfo>
    {
        /// <summary>
        /// Deserializes json to <see cref="BkAgentRespInfo" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override BkAgentRespInfo Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            Option<string> bindclrissrId = default;
            Option<string> bindpyeracctbkId = default;
            Option<string> bindtrxId = default;
            Option<string> bkpyeruserCode = default;
            Option<string> estterLocation = default;

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        case "bindclrissrId":
                            bindclrissrId = new Option<string>(utf8JsonReader.GetString());
                            break;
                        case "bindpyeracctbkId":
                            bindpyeracctbkId = new Option<string>(utf8JsonReader.GetString());
                            break;
                        case "bindtrxId":
                            bindtrxId = new Option<string>(utf8JsonReader.GetString());
                            break;
                        case "bkpyeruserCode":
                            bkpyeruserCode = new Option<string>(utf8JsonReader.GetString());
                            break;
                        case "estterLocation":
                            estterLocation = new Option<string>(utf8JsonReader.GetString());
                            break;
                        default:
                            break;
                    }
                }
            }

            return new BkAgentRespInfo(bindclrissrId, bindpyeracctbkId, bindtrxId, bkpyeruserCode, estterLocation);
        }

        /// <summary>
        /// Serializes a <see cref="BkAgentRespInfo" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="bkAgentRespInfo"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, BkAgentRespInfo bkAgentRespInfo, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            WriteProperties(writer, bkAgentRespInfo, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="BkAgentRespInfo" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="bkAgentRespInfo"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, BkAgentRespInfo bkAgentRespInfo, JsonSerializerOptions jsonSerializerOptions)
        {
            if (bkAgentRespInfo.BindclrissrIdOption.IsSet)
                if (bkAgentRespInfo.BindclrissrIdOption.Value != null)
                    writer.WriteString("bindclrissrId", bkAgentRespInfo.BindclrissrId);
                else
                    writer.WriteNull("bindclrissrId");

            if (bkAgentRespInfo.BindpyeracctbkIdOption.IsSet)
                if (bkAgentRespInfo.BindpyeracctbkIdOption.Value != null)
                    writer.WriteString("bindpyeracctbkId", bkAgentRespInfo.BindpyeracctbkId);
                else
                    writer.WriteNull("bindpyeracctbkId");

            if (bkAgentRespInfo.BindtrxIdOption.IsSet)
                if (bkAgentRespInfo.BindtrxIdOption.Value != null)
                    writer.WriteString("bindtrxId", bkAgentRespInfo.BindtrxId);
                else
                    writer.WriteNull("bindtrxId");

            if (bkAgentRespInfo.BkpyeruserCodeOption.IsSet)
                if (bkAgentRespInfo.BkpyeruserCodeOption.Value != null)
                    writer.WriteString("bkpyeruserCode", bkAgentRespInfo.BkpyeruserCode);
                else
                    writer.WriteNull("bkpyeruserCode");

            if (bkAgentRespInfo.EstterLocationOption.IsSet)
                if (bkAgentRespInfo.EstterLocationOption.Value != null)
                    writer.WriteString("estterLocation", bkAgentRespInfo.EstterLocation);
                else
                    writer.WriteNull("estterLocation");
        }
    }
}
