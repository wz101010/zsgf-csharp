/*
 * 用户全部 API 文档
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using ZSGF.Client.Model;
using ZSGF.Client.Client;
using System.Reflection;

namespace ZSGF.Client.Test.Model
{
    /// <summary>
    ///  Class for testing ReturnPageNotifyRequest
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ReturnPageNotifyRequestTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ReturnPageNotifyRequest
        //private ReturnPageNotifyRequest instance;

        public ReturnPageNotifyRequestTests()
        {
            // TODO uncomment below to create an instance of ReturnPageNotifyRequest
            //instance = new ReturnPageNotifyRequest();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ReturnPageNotifyRequest
        /// </summary>
        [Fact]
        public void ReturnPageNotifyRequestInstanceTest()
        {
            // TODO uncomment below to test "IsType" ReturnPageNotifyRequest
            //Assert.IsType<ReturnPageNotifyRequest>(instance);
        }

        /// <summary>
        /// Test the property 'AppId'
        /// </summary>
        [Fact]
        public void AppIdTest()
        {
            // TODO unit test for the property 'AppId'
        }

        /// <summary>
        /// Test the property 'AuthAppId'
        /// </summary>
        [Fact]
        public void AuthAppIdTest()
        {
            // TODO unit test for the property 'AuthAppId'
        }

        /// <summary>
        /// Test the property 'Charset'
        /// </summary>
        [Fact]
        public void CharsetTest()
        {
            // TODO unit test for the property 'Charset'
        }

        /// <summary>
        /// Test the property 'Method'
        /// </summary>
        [Fact]
        public void MethodTest()
        {
            // TODO unit test for the property 'Method'
        }

        /// <summary>
        /// Test the property 'OutTradeNo'
        /// </summary>
        [Fact]
        public void OutTradeNoTest()
        {
            // TODO unit test for the property 'OutTradeNo'
        }

        /// <summary>
        /// Test the property 'SellerId'
        /// </summary>
        [Fact]
        public void SellerIdTest()
        {
            // TODO unit test for the property 'SellerId'
        }

        /// <summary>
        /// Test the property 'Sign'
        /// </summary>
        [Fact]
        public void SignTest()
        {
            // TODO unit test for the property 'Sign'
        }

        /// <summary>
        /// Test the property 'SignType'
        /// </summary>
        [Fact]
        public void SignTypeTest()
        {
            // TODO unit test for the property 'SignType'
        }

        /// <summary>
        /// Test the property 'Timestamp'
        /// </summary>
        [Fact]
        public void TimestampTest()
        {
            // TODO unit test for the property 'Timestamp'
        }

        /// <summary>
        /// Test the property 'TotalAmount'
        /// </summary>
        [Fact]
        public void TotalAmountTest()
        {
            // TODO unit test for the property 'TotalAmount'
        }

        /// <summary>
        /// Test the property 'TradeNo'
        /// </summary>
        [Fact]
        public void TradeNoTest()
        {
            // TODO unit test for the property 'TradeNo'
        }

        /// <summary>
        /// Test the property 'VarVersion'
        /// </summary>
        [Fact]
        public void VarVersionTest()
        {
            // TODO unit test for the property 'VarVersion'
        }
    }
}
