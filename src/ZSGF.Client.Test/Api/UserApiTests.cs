/*
 * 用户全部 API 文档
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Xunit;
using Microsoft.Extensions.DependencyInjection;
using ZSGF.Client.Api;
using ZSGF.Client.Model;


/* *********************************************************************************
*              Follow these manual steps to construct tests.
*              This file will not be overwritten.
*  *********************************************************************************
* 1. Navigate to ApiTests.Base.cs and ensure any tokens are being created correctly.
*    Take care not to commit credentials to any repository.
*
* 2. Mocking is coordinated by ApiTestsBase#AddApiHttpClients.
*    To mock the client, use the generic AddApiHttpClients.
*    To mock the server, change the client's BaseAddress.
*
* 3. Locate the test you want below
*      - remove the skip property from the Fact attribute
*      - set the value of any variables if necessary
*
* 4. Run the tests and ensure they work.
*
*/


namespace ZSGF.Client.Test.Api
{
    /// <summary>
    ///  Class for testing UserApi
    /// </summary>
    public sealed class UserApiTests : ApiTestsBase
    {
        private readonly IUserApi _instance;

        public UserApiTests(): base(Array.Empty<string>())
        {
            _instance = _host.Services.GetRequiredService<IUserApi>();
        }

        /// <summary>
        /// Test UserDeactivateHard
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task UserDeactivateHardAsyncTest()
        {
            string appKey = default;
            var response = await _instance.UserDeactivateHardAsync(appKey);
            var model = response.Ok();
            Assert.IsType<BooleanApiResponse>(model);
        }

        /// <summary>
        /// Test UserEmailSignIn
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task UserEmailSignInAsyncTest()
        {
            string appKey = default;
            Client.Option<EmailSignInRequest> emailSignInRequest = default;
            var response = await _instance.UserEmailSignInAsync(appKey, emailSignInRequest);
            var model = response.Ok();
            Assert.IsType<TokenModelApiResponse>(model);
        }

        /// <summary>
        /// Test UserEmailSignUp
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task UserEmailSignUpAsyncTest()
        {
            string appKey = default;
            Client.Option<EmailSignUpRequest> emailSignUpRequest = default;
            var response = await _instance.UserEmailSignUpAsync(appKey, emailSignUpRequest);
            var model = response.Ok();
            Assert.IsType<TokenModelApiResponse>(model);
        }

        /// <summary>
        /// Test UserPhoneSignIn
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task UserPhoneSignInAsyncTest()
        {
            string appKey = default;
            Client.Option<PhoneSignInRequest> phoneSignInRequest = default;
            var response = await _instance.UserPhoneSignInAsync(appKey, phoneSignInRequest);
            var model = response.Ok();
            Assert.IsType<TokenModelApiResponse>(model);
        }

        /// <summary>
        /// Test UserPhoneSignUp
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task UserPhoneSignUpAsyncTest()
        {
            string appKey = default;
            Client.Option<PhoneSignUpRequest> phoneSignUpRequest = default;
            var response = await _instance.UserPhoneSignUpAsync(appKey, phoneSignUpRequest);
            var model = response.Ok();
            Assert.IsType<TokenModelApiResponse>(model);
        }

        /// <summary>
        /// Test UserProfile
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task UserProfileAsyncTest()
        {
            string appKey = default;
            var response = await _instance.UserProfileAsync(appKey);
            var model = response.Ok();
            Assert.IsType<UserProfileResultApiResponse>(model);
        }

        /// <summary>
        /// Test UserResetEmail
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task UserResetEmailAsyncTest()
        {
            string appKey = default;
            Client.Option<AppUserResetEmailRequest> appUserResetEmailRequest = default;
            var response = await _instance.UserResetEmailAsync(appKey, appUserResetEmailRequest);
            var model = response.Ok();
            Assert.IsType<BooleanApiResponse>(model);
        }

        /// <summary>
        /// Test UserResetPhone
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task UserResetPhoneAsyncTest()
        {
            string appKey = default;
            Client.Option<AppUserResetPhoneRequest> appUserResetPhoneRequest = default;
            var response = await _instance.UserResetPhoneAsync(appKey, appUserResetPhoneRequest);
            var model = response.Ok();
            Assert.IsType<BooleanApiResponse>(model);
        }

        /// <summary>
        /// Test UserResetPwd
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task UserResetPwdAsyncTest()
        {
            string appKey = default;
            Client.Option<AppUserResetPwdRequest> appUserResetPwdRequest = default;
            var response = await _instance.UserResetPwdAsync(appKey, appUserResetPwdRequest);
            var model = response.Ok();
            Assert.IsType<BooleanApiResponse>(model);
        }

        /// <summary>
        /// Test UserSendEmailCode
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task UserSendEmailCodeAsyncTest()
        {
            string appKey = default;
            Client.Option<SendEmailCodeRequest> sendEmailCodeRequest = default;
            var response = await _instance.UserSendEmailCodeAsync(appKey, sendEmailCodeRequest);
            var model = response.Ok();
            Assert.IsType<BooleanApiResponse>(model);
        }

        /// <summary>
        /// Test UserSendSMSCode
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task UserSendSMSCodeAsyncTest()
        {
            string appKey = default;
            Client.Option<SendSMSCodeRequest> sendSMSCodeRequest = default;
            var response = await _instance.UserSendSMSCodeAsync(appKey, sendSMSCodeRequest);
            var model = response.Ok();
            Assert.IsType<BooleanApiResponse>(model);
        }

        /// <summary>
        /// Test UserSignIn
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task UserSignInAsyncTest()
        {
            string appKey = default;
            Client.Option<SignInRequest> signInRequest = default;
            var response = await _instance.UserSignInAsync(appKey, signInRequest);
            var model = response.Ok();
            Assert.IsType<TokenModelApiResponse>(model);
        }

        /// <summary>
        /// Test UserSignUp
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task UserSignUpAsyncTest()
        {
            string appKey = default;
            Client.Option<SignUpRequest> signUpRequest = default;
            var response = await _instance.UserSignUpAsync(appKey, signUpRequest);
            var model = response.Ok();
            Assert.IsType<TokenModelApiResponse>(model);
        }

        /// <summary>
        /// Test UserTwoFactorAuth
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task UserTwoFactorAuthAsyncTest()
        {
            string appKey = default;
            var response = await _instance.UserTwoFactorAuthAsync(appKey);
            var model = response.Ok();
            Assert.IsType<SetupCodeApiResponse>(model);
        }

        /// <summary>
        /// Test UserUnionIDSignIn
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task UserUnionIDSignInAsyncTest()
        {
            string appKey = default;
            Client.Option<UnionIDSignInRequest> unionIDSignInRequest = default;
            var response = await _instance.UserUnionIDSignInAsync(appKey, unionIDSignInRequest);
            var model = response.Ok();
            Assert.IsType<TokenModelApiResponse>(model);
        }

        /// <summary>
        /// Test UserUnionIDSignUp
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task UserUnionIDSignUpAsyncTest()
        {
            string appKey = default;
            Client.Option<UnionIDSignUpRequest> unionIDSignUpRequest = default;
            var response = await _instance.UserUnionIDSignUpAsync(appKey, unionIDSignUpRequest);
            var model = response.Ok();
            Assert.IsType<TokenModelApiResponse>(model);
        }

        /// <summary>
        /// Test UserUpdateProfile
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task UserUpdateProfileAsyncTest()
        {
            string appKey = default;
            Client.Option<UpdateProfileRequest> updateProfileRequest = default;
            var response = await _instance.UserUpdateProfileAsync(appKey, updateProfileRequest);
            var model = response.Ok();
            Assert.IsType<BooleanApiResponse>(model);
        }
    }
}
