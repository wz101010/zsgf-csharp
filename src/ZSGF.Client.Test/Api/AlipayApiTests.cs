/*
 * 用户全部 API 文档
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Xunit;
using Microsoft.Extensions.DependencyInjection;
using ZSGF.Client.Api;
using ZSGF.Client.Model;


/* *********************************************************************************
*              Follow these manual steps to construct tests.
*              This file will not be overwritten.
*  *********************************************************************************
* 1. Navigate to ApiTests.Base.cs and ensure any tokens are being created correctly.
*    Take care not to commit credentials to any repository.
*
* 2. Mocking is coordinated by ApiTestsBase#AddApiHttpClients.
*    To mock the client, use the generic AddApiHttpClients.
*    To mock the server, change the client's BaseAddress.
*
* 3. Locate the test you want below
*      - remove the skip property from the Fact attribute
*      - set the value of any variables if necessary
*
* 4. Run the tests and ensure they work.
*
*/


namespace ZSGF.Client.Test.Api
{
    /// <summary>
    ///  Class for testing AlipayApi
    /// </summary>
    public sealed class AlipayApiTests : ApiTestsBase
    {
        private readonly IAlipayApi _instance;

        public AlipayApiTests(): base(Array.Empty<string>())
        {
            _instance = _host.Services.GetRequiredService<IAlipayApi>();
        }

        /// <summary>
        /// Test AlipayCreateOrder
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task AlipayCreateOrderAsyncTest()
        {
            string appKey = default;
            Client.Option<AlipayCreateOrderRequest> alipayCreateOrderRequest = default;
            var response = await _instance.AlipayCreateOrderAsync(appKey, alipayCreateOrderRequest);
            var model = response.Ok();
            Assert.IsType<StringApiResponse>(model);
        }

        /// <summary>
        /// Test AlipayCreateOrderPagePay
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task AlipayCreateOrderPagePayAsyncTest()
        {
            string appKey = default;
            Client.Option<AlipayCreateOrderPagePayRequest> alipayCreateOrderPagePayRequest = default;
            var response = await _instance.AlipayCreateOrderPagePayAsync(appKey, alipayCreateOrderPagePayRequest);
            var model = response.Ok();
            Assert.IsType<StringApiResponse>(model);
        }

        /// <summary>
        /// Test AlipayCreateOrderWapPay
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task AlipayCreateOrderWapPayAsyncTest()
        {
            string appKey = default;
            Client.Option<AlipayCreateOrderWapPayRequest> alipayCreateOrderWapPayRequest = default;
            var response = await _instance.AlipayCreateOrderWapPayAsync(appKey, alipayCreateOrderWapPayRequest);
            var model = response.Ok();
            Assert.IsType<StringApiResponse>(model);
        }

        /// <summary>
        /// Test AlipayOrderDetail
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task AlipayOrderDetailAsyncTest()
        {
            string appKey = default;
            Client.Option<string> orderNo = default;
            var response = await _instance.AlipayOrderDetailAsync(appKey, orderNo);
            var model = response.Ok();
            Assert.IsType<AlipayTradeQueryResponseApiResponse>(model);
        }

        /// <summary>
        /// Test AlipayOrderRefund
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task AlipayOrderRefundAsyncTest()
        {
            string appKey = default;
            Client.Option<string> amount = default;
            Client.Option<string> orderNo = default;
            var response = await _instance.AlipayOrderRefundAsync(appKey, amount, orderNo);
            var model = response.Ok();
            Assert.IsType<AlipayTradeRefundResponseApiResponse>(model);
        }

        /// <summary>
        /// Test AlipayReturnPageNotify
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task AlipayReturnPageNotifyAsyncTest()
        {
            string appKey = default;
            Client.Option<ReturnPageNotifyRequest> returnPageNotifyRequest = default;
            var response = await _instance.AlipayReturnPageNotifyAsync(appKey, returnPageNotifyRequest);
            var model = response.Ok();
            Assert.IsType<BooleanApiResponse>(model);
        }
    }
}
